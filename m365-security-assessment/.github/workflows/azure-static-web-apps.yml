name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build_and_deploy_job:
    name: Build and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: dev
    
    env:
      NODE_VERSION: '18.x'
      APP_LOCATION: 'm365-assessment-framework'
      API_LOCATION: 'm365-assessment-framework/api'
      OUTPUT_LOCATION: 'build'
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Azure login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.APP_LOCATION }}/package-lock.json'

      - name: Install Dependencies
        working-directory: ${{ env.APP_LOCATION }}
        run: npm ci
        
      - name: Build Application
        working-directory: ${{ env.APP_LOCATION }}
        run: |
          echo "Starting build process with verbose output..."
          export NODE_OPTIONS="--max-old-space-size=4096 --trace-warnings"
          set -x  # Enable command echoing
          npm run build --verbose > >(tee build-output.log) 2> >(tee build-error.log >&2) || {
            echo "Build failed. Full build output:"
            cat build-output.log
            echo "\nBuild errors:"
            cat build-error.log
            echo "\nNPM Debug Log (if exists):"
            cat npm-debug.log || true
            exit 1
          }
        env:
          CI: false
          DEBUG: "*"
          NODE_ENV: production
          REACT_APP_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          REACT_APP_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Build API
        working-directory: ${{ env.API_LOCATION }}
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build --if-present
          fi

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        id: deploy
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          api_location: ${{ env.API_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: true
          skip_api_build: true
        env:
          IS_STATIC_EXPORT: true
          NODE_ENV: production

      - name: Deploy Azure Functions
        uses: Azure/functions-action@v1
        if: success() && github.event_name != 'pull_request'
        with:
          app-name: ${{ secrets.AZURE_FUNCTION_APP_NAME }}
          package: ${{ env.API_LOCATION }}
          respect-funcignore: true
          scm-do-build-during-deployment: false
        env:
          WEBSITE_NODE_DEFAULT_VERSION: "~18"
          FUNCTIONS_WORKER_RUNTIME: "node"
          FUNCTIONS_EXTENSION_VERSION: "~4"

      - name: Build Status Check
        if: always()
        run: |
          if [ "${{ steps.deploy.outcome }}" == "failure" ]; then
            echo "Deployment failed. Check the Azure Static Web Apps logs for more details."
            exit 1
          fi

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true