import { app, HttpRequest, HttpResponseInit, InvocationContext } from "@azure/functions";

// Simple customers endpoint that returns mock data for now
export async function GetCustomers(request: HttpRequest, context: InvocationContext): Promise<HttpResponseInit> {
    context.log('HTTP trigger function processed a request for customers');

    // CORS headers
    const corsHeaders = {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type, Authorization',
        'Content-Type': 'application/json'
    };

    // Handle preflight OPTIONS request
    if (request.method === 'OPTIONS') {
        return {
            status: 200,
            headers: corsHeaders
        };
    }

    // For now, return mock data to get your frontend working
    const mockCustomers = [
        {
            id: "mock-customer-1",
            tenantId: "tenant-123",
            tenantName: "Contoso Corp",
            tenantDomain: "contoso.onmicrosoft.com",
            applicationId: "app-123",
            clientId: "client-123",
            servicePrincipalId: "sp-123",
            createdDate: new Date().toISOString(),
            totalAssessments: 5,
            status: "active",
            permissions: ["Directory.Read.All", "SecurityEvents.Read.All"],
            contactEmail: "admin@contoso.com"
        }
    ];

    return {
        status: 200,
        headers: corsHeaders,
        body: JSON.stringify({
            success: true,
            data: mockCustomers,
            count: mockCustomers.length
        })
    };
}

// Register the function
app.http('customers', {
    methods: ['GET', 'POST', 'OPTIONS'],
    authLevel: 'anonymous',
    route: 'customers',
    handler: GetCustomers
});

// Simple assessments endpoint  
export async function GetAssessments(request: HttpRequest, context: InvocationContext): Promise<HttpResponseInit> {
    context.log('HTTP trigger function processed a request for assessments');

    const corsHeaders = {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type, Authorization',
        'Content-Type': 'application/json'
    };

    if (request.method === 'OPTIONS') {
        return {
            status: 200,
            headers: corsHeaders
        };
    }

    // Mock assessment data
    const mockAssessments = [
        {
            id: "assessment-1",
            tenantId: "tenant-123",
            assessmentDate: new Date().toISOString(),
            overallScore: 75,
            status: "completed"
        }
    ];

    return {
        status: 200,
        headers: corsHeaders,
        body: JSON.stringify({
            success: true,
            data: mockAssessments,
            count: mockAssessments.length
        })
    };
}

// Register the assessments function
app.http('assessments', {
    methods: ['GET', 'POST', 'OPTIONS'],
    authLevel: 'anonymous',
    route: 'assessments',
    handler: GetAssessments
});