{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "7941718481409684401"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Name of the environment (e.g., dev, staging, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "useSqlDatabase": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether to use SQL Database instead of Table Storage"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "sqladmin",
      "metadata": {
        "description": "SQL Admin username (required if useSqlDatabase is true)"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "SQL Admin password (required if useSqlDatabase is true)"
      }
    }
  },
  "variables": {
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName')))]",
    "resourcePrefix": "m365",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]",
      "project": "M365SecurityAssessment",
      "environment": "[parameters('environmentName')]"
    }
  },
  "resources": {
    "logAnalyticsWorkspace": {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-logs-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1
        }
      }
    },
    "applicationInsights": {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-insights-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "logAnalyticsWorkspace"
      ]
    },
    "storageAccount": {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      }
    },
    "keyVault": {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-kv-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      }
    },
    "userAssignedIdentity": {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}-identity-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    "staticWebApp": {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2024-04-01",
      "name": "m365-assessment-framework",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('azd-service-name', 'm365-assessment-frontend'))]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "buildProperties": {
          "appLocation": "/",
          "apiLocation": "api",
          "outputLocation": "build"
        },
        "enterpriseGradeCdnStatus": "Disabled"
      }
    },
    "staticWebAppConfigTableStorage": {
      "condition": "[not(parameters('useSqlDatabase'))]",
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}/{1}', 'm365-assessment-framework', 'appsettings')]",
      "properties": {
        "AZURE_STORAGE_CONNECTION_STRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('{0}{1}', variables('resourcePrefix'), variables('resourceToken')), environment().suffixes.storage, listKeys('storageAccount', '2023-01-01').keys[0].value)]",
        "AZURE_TENANT_ID": "[tenant().tenantId]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference('applicationInsights').ConnectionString]",
        "KEY_VAULT_URL": "[reference('keyVault').vaultUri]",
        "DATABASE_TYPE": "TABLE_STORAGE"
      },
      "dependsOn": [
        "applicationInsights",
        "keyVault",
        "staticWebApp",
        "storageAccount"
      ]
    },
    "staticWebAppConfigSql": {
      "condition": "[parameters('useSqlDatabase')]",
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}/{1}', 'm365-assessment-framework', 'appsettings')]",
      "properties": {
        "AZURE_STORAGE_CONNECTION_STRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('{0}{1}', variables('resourcePrefix'), variables('resourceToken')), environment().suffixes.storage, listKeys('storageAccount', '2023-01-01').keys[0].value)]",
        "AZURE_TENANT_ID": "[tenant().tenantId]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference('applicationInsights').ConnectionString]",
        "KEY_VAULT_URL": "[reference('keyVault').vaultUri]",
        "DATABASE_TYPE": "SQL",
        "SQL_SERVER_NAME": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlServerFqdn.value, '')]",
        "SQL_DATABASE_NAME": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlDatabaseName.value, '')]",
        "SQL_CONNECTION_STRING": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlConnectionString.value, '')]"
      },
      "dependsOn": [
        "applicationInsights",
        "keyVault",
        "sqlDatabase",
        "staticWebApp",
        "storageAccount"
      ]
    },
    "keyVaultSecretsUserRole": {
      "existing": true,
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "subscriptionId": "[subscription().subscriptionId]",
      "name": "4633458b-17de-408a-b874-0445c86b69e6"
    },
    "storageTableDataContributorRole": {
      "existing": true,
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "subscriptionId": "[subscription().subscriptionId]",
      "name": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3"
    },
    "keyVaultRoleAssignment": {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('{0}-kv-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', format('{0}-kv-{1}', variables('resourcePrefix'), variables('resourceToken'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}', variables('resourcePrefix'), variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference('userAssignedIdentity').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "keyVault",
        "userAssignedIdentity"
      ]
    },
    "storageRoleAssignment": {
      "condition": "[not(parameters('useSqlDatabase'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}{1}', variables('resourcePrefix'), variables('resourceToken')))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', variables('resourcePrefix'), variables('resourceToken'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}', variables('resourcePrefix'), variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')]",
        "principalId": "[reference('userAssignedIdentity').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "storageAccount",
        "userAssignedIdentity"
      ]
    },
    "sqlDbContributorRole": {
      "condition": "[parameters('useSqlDatabase')]",
      "existing": true,
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "subscriptionId": "[subscription().subscriptionId]",
      "name": "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec"
    },
    "sqlRoleAssignment": {
      "condition": "[parameters('useSqlDatabase')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}', variables('resourcePrefix'), variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9b7fa17d-e63e-47b0-bb0a-15c516ac86ec'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9b7fa17d-e63e-47b0-bb0a-15c516ac86ec')]",
        "principalId": "[reference('userAssignedIdentity').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "userAssignedIdentity"
      ]
    },
    "sqlDatabase": {
      "condition": "[parameters('useSqlDatabase')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sqlDatabase",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlAdminUsername": {
            "value": "[parameters('sqlAdminUsername')]"
          },
          "sqlAdminPassword": {
            "value": "[parameters('sqlAdminPassword')]"
          },
          "userAssignedIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}', variables('resourcePrefix'), variables('resourceToken')))]"
          },
          "userAssignedIdentityPrincipalId": {
            "value": "[reference('userAssignedIdentity').principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "13920081971228128688"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Name of the environment (e.g., dev, staging, prod)"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Primary location for all resources"
              }
            },
            "sqlAdminUsername": {
              "type": "string",
              "defaultValue": "sqladmin",
              "metadata": {
                "description": "Admin username for SQL Server"
              }
            },
            "sqlAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Admin password for SQL Server"
              }
            },
            "userAssignedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "User-assigned managed identity ID"
              }
            },
            "userAssignedIdentityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "User-assigned managed identity principal ID"
              }
            }
          },
          "variables": {
            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName')))]",
            "resourcePrefix": "m365",
            "tags": {
              "azd-env-name": "[parameters('environmentName')]",
              "project": "M365SecurityAssessment",
              "environment": "[parameters('environmentName')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": "[variables('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('userAssignedIdentityId'))]": {}
                }
              },
              "properties": {
                "administratorLogin": "[parameters('sqlAdminUsername')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "administrators": {
                  "administratorType": "ActiveDirectory",
                  "principalType": "Application",
                  "login": "ManagedIdentity",
                  "sid": "[parameters('userAssignedIdentityPrincipalId')]",
                  "tenantId": "[subscription().tenantId]",
                  "azureADOnlyAuthentication": false
                }
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}', format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken')), format('{0}-assessment-db-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
              "location": "[parameters('location')]",
              "tags": "[variables('tags')]",
              "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local",
                "autoPauseDelay": 60,
                "minCapacity": "[json('0.5')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2023-05-01-preview",
              "name": "[format('{0}/{1}', format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken')), 'AllowAzureServices')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken')))]"
              ]
            }
          ],
          "outputs": {
            "sqlServerName": {
              "type": "string",
              "value": "[format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken'))]"
            },
            "sqlDatabaseName": {
              "type": "string",
              "value": "[format('{0}-assessment-db-{1}', variables('resourcePrefix'), variables('resourceToken'))]"
            },
            "sqlConnectionString": {
              "type": "string",
              "value": "[format('Server=tcp:{0},1433;Database={1};Authentication=Active Directory Managed Identity;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', reference(resourceId('Microsoft.Sql/servers', format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2023-05-01-preview').fullyQualifiedDomainName, format('{0}-assessment-db-{1}', variables('resourcePrefix'), variables('resourceToken')))]"
            },
            "sqlServerFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', format('{0}-sql-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2023-05-01-preview').fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "userAssignedIdentity"
      ]
    }
  },
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_STORAGE_CONNECTION_STRING": {
      "type": "string",
      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('{0}{1}', variables('resourcePrefix'), variables('resourceToken')), environment().suffixes.storage, listKeys('storageAccount', '2023-01-01').keys[0].value)]"
    },
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference('applicationInsights').ConnectionString]"
    },
    "KEY_VAULT_URL": {
      "type": "string",
      "value": "[reference('keyVault').vaultUri]"
    },
    "DATABASE_TYPE": {
      "type": "string",
      "value": "[if(parameters('useSqlDatabase'), 'SQL', 'TABLE_STORAGE')]"
    },
    "STATIC_WEB_APP_NAME": {
      "type": "string",
      "value": "m365-assessment-framework"
    },
    "STATIC_WEB_APP_URL": {
      "type": "string",
      "value": "[format('https://{0}', reference('staticWebApp').defaultHostname)]"
    },
    "USER_ASSIGNED_IDENTITY_ID": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}', variables('resourcePrefix'), variables('resourceToken')))]"
    },
    "USER_ASSIGNED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference('userAssignedIdentity').clientId]"
    },
    "SQL_SERVER_NAME": {
      "type": "string",
      "value": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlServerName.value, '')]"
    },
    "SQL_DATABASE_NAME": {
      "type": "string",
      "value": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlDatabaseName.value, '')]"
    },
    "SQL_CONNECTION_STRING": {
      "type": "string",
      "value": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlConnectionString.value, '')]"
    },
    "SQL_SERVER_FQDN": {
      "type": "string",
      "value": "[if(parameters('useSqlDatabase'), reference('sqlDatabase').outputs.sqlServerFqdn.value, '')]"
    }
  }
}